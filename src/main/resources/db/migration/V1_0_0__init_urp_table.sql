CREATE SCHEMA IF NOT EXISTS backend;

CREATE TABLE backend."tb_user"
(
  "user_id"          BIGINT    NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
  "username"    VARCHAR   NOT NULL UNIQUE,
  "email"       VARCHAR   NOT NULL UNIQUE,
  "password"    VARCHAR   NOT NULL,
  "create_time" TIMESTAMP NOT NULL DEFAULT now(),
  "update_time" TIMESTAMP NOT NULL DEFAULT now(),
  "enable"      BOOLEAN   NOT NULL DEFAULT true,
  PRIMARY KEY ("user_id")
);

comment on column backend.tb_user.user_id is '用户 id';
comment on column backend.tb_user.username is '用户名';
comment on column backend.tb_user.email is '邮箱';
comment on column backend.tb_user.password is '密码';
comment on column backend.tb_user.create_time is '创建时间';
comment on column backend.tb_user.update_time is '更新时间';
comment on column backend.tb_user.enable is '是否启用';

CREATE TABLE backend."tb_role"
(
  "role_id"   BIGINT  NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
  "code" VARCHAR NOT NULL,
  PRIMARY KEY ("role_id")
);

comment on column backend.tb_role.role_id is '角色 id';
comment on column backend.tb_role.code is '角色代码';

CREATE TABLE backend."tb_permission"
(
  "permission_id"   BIGINT  NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
  "code" VARCHAR NOT NULL,
  PRIMARY KEY ("permission_id")
);

comment on column backend.tb_permission.permission_id is '权限 id';
comment on column backend.tb_permission.code is '权限代码';

CREATE TABLE backend."role_permission_map"
(
  "id"            BIGINT NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
  "role_id"       BIGINT NOT NULL,
  "permission_id" BIGINT NOT NULL,
  PRIMARY KEY ("id")
);

CREATE TABLE backend."user_role_map"
(
  "id"      BIGINT NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
  "user_id" BIGINT NOT NULL,
  "role_id" BIGINT NOT NULL,
  PRIMARY KEY ("id")
);

ALTER TABLE backend."user_role_map"
  ADD FOREIGN KEY ("user_id") REFERENCES backend."tb_user" ("user_id")
    ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE backend."user_role_map"
  ADD FOREIGN KEY ("role_id") REFERENCES backend."tb_role" ("role_id")
    ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE backend."role_permission_map"
  ADD FOREIGN KEY ("role_id") REFERENCES backend."tb_role" ("role_id")
    ON UPDATE NO ACTION ON DELETE CASCADE;
ALTER TABLE backend."role_permission_map"
  ADD FOREIGN KEY ("permission_id") REFERENCES backend."tb_permission" ("permission_id")
    ON UPDATE NO ACTION ON DELETE CASCADE;
